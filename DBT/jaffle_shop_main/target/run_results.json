{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v6.json", "dbt_version": "1.9.1", "generated_at": "2025-01-08T11:02:22.816951Z", "invocation_id": "9c3c8e62-e3ab-49bb-8d6b-5f41cfffd91a", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.438825Z", "completed_at": "2025-01-08T11:02:22.444924Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.445392Z", "completed_at": "2025-01-08T11:02:22.535199Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.09774947166442871, "adapter_response": {"_message": "SELECT 2", "code": "SELECT", "rows_affected": 2}, "message": "SELECT 2", "failures": null, "unique_id": "model.jaffle_shop_main.my_first_dbt_model", "compiled": true, "compiled_code": "/*\n    Welcome to your first dbt model!\n    Did you know that you can also configure models directly within SQL files?\n    This will override configurations stated in dbt_project.yml\n\n    Try changing \"table\" to \"view\" below\n*/\n\n\n\nwith source_data as (\n\n    select 1 as id\n    union all\n    select null as id\n\n)\n\nselect *\nfrom source_data\n\n/*\n    Uncomment the line below to remove records with null `id` values\n*/\n\n-- where id is not null", "relation_name": "\"dbt_demo\".\"public\".\"my_first_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.540819Z", "completed_at": "2025-01-08T11:02:22.543223Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.543552Z", "completed_at": "2025-01-08T11:02:22.573488Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.034038543701171875, "adapter_response": {"_message": "SELECT 100", "code": "SELECT", "rows_affected": 100}, "message": "SELECT 100", "failures": null, "unique_id": "model.jaffle_shop_main.stg_customers", "compiled": true, "compiled_code": "with source as (\n\n    --\n    select * from \"dbt_demo\".\"public\".\"raw_customers\"\n\n),\n\nrenamed as (\n\n    select\n        id as customer_id,\n        first_name,\n        last_name\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"dbt_demo\".\"public\".\"stg_customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.577597Z", "completed_at": "2025-01-08T11:02:22.579903Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.580271Z", "completed_at": "2025-01-08T11:02:22.611884Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03551197052001953, "adapter_response": {"_message": "SELECT 99", "code": "SELECT", "rows_affected": 99}, "message": "SELECT 99", "failures": null, "unique_id": "model.jaffle_shop_main.stg_orders", "compiled": true, "compiled_code": "with source as (\n\n    --\n    select * from \"dbt_demo\".\"public\".\"raw_orders\"\n\n),\n\nrenamed as (\n\n    select\n        id as order_id,\n        user_id as customer_id,\n        order_date,\n        status\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"dbt_demo\".\"public\".\"stg_orders\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.616140Z", "completed_at": "2025-01-08T11:02:22.618560Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.618868Z", "completed_at": "2025-01-08T11:02:22.663232Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.048432350158691406, "adapter_response": {"_message": "SELECT 226", "code": "SELECT", "rows_affected": 226}, "message": "SELECT 226", "failures": null, "unique_id": "model.jaffle_shop_main.stg_payments", "compiled": true, "compiled_code": "with source as (\n    \n    --\n    select * from \"dbt_demo\".\"public\".\"raw_payments\"\n\n),\n\nrenamed as (\n\n    select\n        id as payment_id,\n        order_id,\n        payment_method,\n\n        -- `amount` is currently stored in cents, so we convert it to dollars\n        amount / 100 as amount\n\n    from source\n\n)\n\nselect * from renamed", "relation_name": "\"dbt_demo\".\"public\".\"stg_payments\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.669156Z", "completed_at": "2025-01-08T11:02:22.672917Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.673368Z", "completed_at": "2025-01-08T11:02:22.717766Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.05011177062988281, "adapter_response": {"_message": "SELECT 1", "code": "SELECT", "rows_affected": 1}, "message": "SELECT 1", "failures": null, "unique_id": "model.jaffle_shop_main.my_second_dbt_model", "compiled": true, "compiled_code": "-- Use the `ref` function to select from other models\n\nselect *\nfrom \"dbt_demo\".\"public\".\"my_first_dbt_model\"\nwhere id = 1", "relation_name": "\"dbt_demo\".\"public\".\"my_second_dbt_model\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.721742Z", "completed_at": "2025-01-08T11:02:22.725138Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.725490Z", "completed_at": "2025-01-08T11:02:22.756570Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.03649091720581055, "adapter_response": {"_message": "SELECT 100", "code": "SELECT", "rows_affected": 100}, "message": "SELECT 100", "failures": null, "unique_id": "model.jaffle_shop_main.customers", "compiled": true, "compiled_code": "with customers as (\n\n    select * from \"dbt_demo\".\"public\".\"stg_customers\"\n\n),\n\norders as (\n\n    select * from \"dbt_demo\".\"public\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select * from \"dbt_demo\".\"public\".\"stg_payments\"\n\n),\n\ncustomer_orders as (\n\n        select\n        customer_id,\n\n        min(order_date) as first_order,\n        max(order_date) as most_recent_order,\n        count(order_id) as number_of_orders\n    from orders\n\n    group by customer_id\n\n),\n\ncustomer_payments as (\n\n    select\n        orders.customer_id,\n        sum(amount) as total_amount\n\n    from payments\n\n    left join orders on\n         payments.order_id = orders.order_id\n\n    group by orders.customer_id\n\n),\n\nfinal as (\n\n    select\n        customers.customer_id,\n        customers.first_name,\n        customers.last_name,\n        customer_orders.first_order,\n        customer_orders.most_recent_order,\n        customer_orders.number_of_orders,\n        customer_payments.total_amount as customer_lifetime_value\n\n    from customers\n\n    left join customer_orders\n        on customers.customer_id = customer_orders.customer_id\n\n    left join customer_payments\n        on  customers.customer_id = customer_payments.customer_id\n\n)\n\nselect * from final", "relation_name": "\"dbt_demo\".\"public\".\"customers\"", "batch_results": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2025-01-08T11:02:22.761574Z", "completed_at": "2025-01-08T11:02:22.766506Z"}, {"name": "execute", "started_at": "2025-01-08T11:02:22.766787Z", "completed_at": "2025-01-08T11:02:22.801851Z"}], "thread_id": "Thread-1 (worker)", "execution_time": 0.04168200492858887, "adapter_response": {"_message": "SELECT 99", "code": "SELECT", "rows_affected": 99}, "message": "SELECT 99", "failures": null, "unique_id": "model.jaffle_shop_main.orders", "compiled": true, "compiled_code": "\n\nwith orders as (\n\n    select * from \"dbt_demo\".\"public\".\"stg_orders\"\n\n),\n\npayments as (\n\n    select * from \"dbt_demo\".\"public\".\"stg_payments\"\n\n),\n\norder_payments as (\n\n    select\n        order_id,\n\n        sum(case when payment_method = 'credit_card' then amount else 0 end) as credit_card_amount,\n        sum(case when payment_method = 'coupon' then amount else 0 end) as coupon_amount,\n        sum(case when payment_method = 'bank_transfer' then amount else 0 end) as bank_transfer_amount,\n        sum(case when payment_method = 'gift_card' then amount else 0 end) as gift_card_amount,\n        sum(amount) as total_amount\n\n    from payments\n\n    group by order_id\n\n),\n\nfinal as (\n\n    select\n        orders.order_id,\n        orders.customer_id,\n        orders.order_date,\n        orders.status,\n\n        order_payments.credit_card_amount,\n\n        order_payments.coupon_amount,\n\n        order_payments.bank_transfer_amount,\n\n        order_payments.gift_card_amount,\n\n        order_payments.total_amount as amount\n\n    from orders\n\n\n    left join order_payments\n        on orders.order_id = order_payments.order_id\n\n)\n\nselect * from final", "relation_name": "\"dbt_demo\".\"public\".\"orders\"", "batch_results": null}], "elapsed_time": 0.4612538814544678, "args": {"print": true, "which": "run", "invocation_command": "dbt run", "require_explicit_package_overrides_for_builtin_materializations": true, "log_path": "/home/rani/apps/dbt-demo/jaffle_shop_main/logs", "version_check": true, "partial_parse_file_diff": true, "source_freshness_run_project_hooks": false, "show_resource_report": false, "log_format": "default", "select": [], "exclude": [], "macro_debugging": false, "project_dir": "/home/rani/apps/dbt-demo/jaffle_shop_main", "require_batched_execution_for_custom_microbatch_strategy": false, "use_colors": true, "cache_selected_only": false, "introspect": true, "favor_state": false, "write_json": true, "quiet": false, "require_nested_cumulative_type_params": false, "populate_cache": true, "static_parser": true, "state_modified_compare_more_unrendered_values": false, "profiles_dir": "/home/rani/.dbt", "log_format_file": "debug", "defer": false, "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "indirect_selection": "eager", "log_level": "info", "require_yaml_configuration_for_mf_time_spines": false, "require_resource_names_without_spaces": false, "state_modified_compare_vars": false, "empty": false, "vars": {}, "log_file_max_bytes": 10485760, "partial_parse": true, "use_colors_file": true, "printer_width": 80, "send_anonymous_usage_stats": true, "skip_nodes_if_on_run_start_fails": false, "strict_mode": false}}